{"version":3,"sources":["media/logo.svg","containers/App.js","components/answer-option/answer-option.js","components/question/question.js","components/question-count/question-count.js","components/problem/problem.js","selectors/api-selectors.js","selectors/local-selectors.js","actions/api-actions.js","containers/welcome/welcome.js","actions/local-actions.js","store.js","reducers/local-reducers.js","reducers/api-reducers.js","api/question-list.js","containers/main/main.js","routes.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","this","props","children","Component","AnswerOption","className","type","name","checked","answerContent","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","Question","content","QuestionCount","counter","total","Problem","key","questionId","questionTotal","category","question","answerOptions","map","answerId","getApiState","state","api","getMedia","media","getAnswer","getIndex","length","correct_answer","getAnswerOptions","options","getQuestion","getTotalQuestions","getCategory","getIsLoading","isFetching","getLocalState","local","index","getTotalQsRequested","totalQs","getCorrectUserAnswers","rightAns","getEntryOrExit","entry","apiFetchBegin","apiFetchSuccess","response","payload","apiFetchError","welcome","Link","to","onClick","renderResultNext","correctAnswers","clearState","src","logo","alt","renderContent","connect","dispatch","store","createStore","combineReducers","arguments","undefined","difficulty","Object","objectSpread","error","action","applyMiddleware","createLogger","shuffleArray","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","i","transformData","list","_","values","itemList","listItem","answerList","incorrect_answers","push","j","fetchAPi","amount","url","uri","parameters","join","addParameterToURL","fetch","then","ok","json","Error","_callee","regenerator_default","wrap","_context","prev","next","sent","results","t0","stop","main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAnswerSelected","bind","assertThisInitialized","_x","_x2","_x3","_getQuestions","apply","getQuestions","event","target","rightAnswer","totalQuestion","displayNextQs","history","isLoading","react_spinners","sizeUnit","size","color","loading","correct","routes","HashRouter","containers_App","Switch","Route","exact","path","component","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.7bec469f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.84287d09.svg\";","import React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n          {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './answer-option.css';\n\nexport function AnswerOption(props) {\n  return (\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerContent === props.answer}\n        id={props.id}\n        value={props.answerContent}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerContent}>\n        {props.answerContent}\n      </label>\n    </li>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerId: PropTypes.number.isRequired,\n  questionId: PropTypes.number.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './question.css';\n\nexport function Question(props) {\n  return <h2 className=\"question\">{props.content}</h2>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './question-count.css';\n\nexport function QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Question, QuestionCount, AnswerOption } from 'components';\nimport './problem.css';\n\nexport function Problem(props) {\n\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.id}\n        answerContent={key.answer}\n        answerId={key.id}\n        answer={''}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId+1} total={props.questionTotal} />\n        <div>{props.category}</div>\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n  );\n}\n\nProblem.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default Problem;","import { getIndex } from \"selectors\";\n\n\nconst getApiState = (state) => state.api;\n\nconst getMedia = (state) => getApiState(state).media;\n\nexport const getAnswer = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].correct_answer;\n    }\n    return '';\n}\n\nexport const getAnswerOptions = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].options;\n    }\n    return [];\n}\n\nexport const getQuestion = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].question;\n    }\n    return '';\n}\n\nexport const getTotalQuestions = (state) => {\n    const media = getMedia(state);\n    return media.length;\n}\n\nexport const getCategory = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].category;\n    }\n    return '';\n}\n\nexport const getIsLoading = (state) => getApiState(state).isFetching;","const getLocalState = (state) => state.local;\n\nexport const getIndex = (state) => getLocalState(state).index;\n\nexport const getTotalQsRequested = (state) => getLocalState(state).totalQs;\n\nexport const getCorrectUserAnswers = (state) => getLocalState(state).rightAns;\n\nexport const getType = (state) => getLocalState(state).type;\n\nexport const getDifficulty = (state) => getLocalState(state).difficulty;\n\nexport const getEntryOrExit = (state) => getLocalState(state).entry;","export const apiFetchBegin = () => ({\n    type: \"FETCH\",\n});\n\nexport const apiFetchSuccess = (response) => ({\n    type: \"POPULATE\",\n    payload: response,\n});\n\nexport const apiFetchError = () => ({\n    type: \"ERROR\"\n});\n\nexport const clearAPIState = () => ({\n    type: \"CLEAR_API_STATE\"\n});","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport logo from 'media/logo.svg';\nimport { Question } from 'components';\nimport { getEntryOrExit, getCorrectUserAnswers, getTotalQsRequested } from 'selectors';\nimport { renderResultNext } from 'actions';\nimport './welcome.css';\nimport { clearAPIState, clearLocalState } from '../../actions';\n\nclass welcome extends Component {\n\n    renderContent() {\n        if (this.props.entry) {\n            return (\n                <div>\n                    <br/>\n                    <Question content={\"You'll be presented with 3 True/False Questions.\"} />\n                    <br/>\n                    <Question content={\"Can you score 100%?\"} />\n                    <br/>\n                    <Link to=\"/main\" className=\"btn btn-primary\" onClick={this.props.renderResultNext}>\n                        Let's find out\n                    </Link>\n                </div>\n            );\n        } else {\n            return (\n                <div>\n                    <br/>\n                    <Question content={\"You scored\"} />\n                    <Question content={this.props.correctAnswers + \"/\" + this.props.totalQs} />\n                    <br/>\n                    <Link to=\"/\" className=\"btn btn-primary\" onClick={this.props.clearState}>\n                        Would you like to replay?\n                    </Link>\n                </div>\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\" >\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <h2>Welcome to the Trivia Challenge!!</h2>\n                </div>\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    entry: getEntryOrExit(state),\n    correctAnswers: getCorrectUserAnswers(state),\n    totalQs: getTotalQsRequested(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    clearState: () => {\n        dispatch(clearAPIState());\n        dispatch(clearLocalState());\n    },\n    renderResultNext: () => dispatch(renderResultNext())\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(welcome);","export const increaseIndex = () => ({\n    type: \"INCREASE_INDEX\"\n});\n\nexport const modifyCorrectAnswerCount = (correct) => ({\n    type: \"CORRECT_ANSWER_COUNT\",\n    payload: correct\n});\n\nexport const clearLocalState = () => ({\n    type: \"CLEAR_LOCAL_STATE\"\n});\n\nexport const renderResultNext = () => ({\n    type: \"RENDER_RESULT_NEXT\"\n});","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { localReducer, apiReducer } from './reducers';\n\nexport const store = createStore(combineReducers({\n    local: localReducer,\n    api: apiReducer\n}), {}, applyMiddleware(createLogger()));","export const localReducer = (\n    state = {\n        index: 0,\n        rightAns: 0,\n        totalQs: 3,\n        type: \"multiple\",\n        difficulty: \"hard\",\n        entry: 1,\n    }, action) => {\n    \n    switch(action.type) {\n        case \"CLEAR_LOCAL_STATE\":\n            state = {\n                ...state,\n                entry: 1,\n                index: 0,\n                rightAns: 0,\n                totalQs: 3,\n            }\n            break;\n        case \"RENDER_RESULT_NEXT\":\n            state = {\n                ...state,\n                entry: 0,\n            }\n            break;\n        case \"INCREASE_INDEX\":\n            state = {\n                ...state,\n                index: state.index + 1,\n            }\n            break;\n        case \"CORRECT_ANSWER_COUNT\":\n            state = {\n                ...state,\n                rightAns: state.rightAns + 1\n            }\n            break;\n        default:\n            break;\n    }\n    return state;\n};","export const apiReducer = (\n    state = {\n        media: [],\n        isFetching: false,\n        error: undefined,\n    }, action) => {\n    \n    switch(action.type) {\n        case \"CLEAR_API_STATE\":\n            state = {\n                media: [],\n                isFetching: false,\n                error: true,\n            }\n        break; \n        case \"FETCH\":\n            state = {\n                ...state,\n                isFetching: true,\n                error: undefined,\n            }\n            break;        \n        case \"POPULATE\":\n            state = {\n                ...state,\n                isFetching: false,\n                media: action.payload,\n                error: undefined,\n            }\n            break;\n        case \"ERROR\":\n            state = {\n                ...state,\n                isFetching: false,\n                error: true,\n            }\n            break;    \n        default:\n            break;\n    }\n    return state;\n};","import _ from 'lodash';\nimport { store } from '../store.js';\nimport { apiFetchBegin, apiFetchSuccess, apiFetchError } from 'actions';\n\nfunction addParameterToURL(uri, amount, difficulty, type) {\n    let parameters = [];\n    if (amount !== undefined) {\n        parameters.push('amount=' + amount);\n    }\n    if (difficulty !== undefined) {\n        parameters.push('difficulty=' + difficulty);\n    }\n    if (type !== undefined) {\n        parameters.push('type=' + type);\n    }\n    return uri + '?' + parameters.join('&');\n}\n\nfunction shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].index) {\n            array[i].index = i;\n        }\n    }\n\n    return array;\n}\n\nexport function transformData(array) {\n    var list = _.values(array);\n    var itemList = [];\n    for ( let i = 0; i < list.length; i++) {\n        const listItem = list[i];\n        var answerList = _.values(listItem.incorrect_answers);\n        answerList.push(listItem.correct_answer);\n        answerList = shuffleArray(answerList);\n        var options = [];\n        for (var j = 0;j < answerList.length; j++) {\n            options.push({\n                answer: answerList[j],\n                id: j\n            });\n        };\n        itemList.push({\n            index: i,\n            category: listItem.category,\n            question: listItem.question,\n            correct_answer: listItem.correct_answer,\n            options: options\n        });\n    }\n    itemList = shuffleArray(itemList);\n    return itemList;\n}\n\nfunction fetchAPi(amount, difficulty, type) {\n    const url = addParameterToURL(\"https://opentdb.com/api.php\", amount, difficulty, type);\n\n    return fetch(url)\n    .then(response => {\n        if(response.ok) {\n            var value = response.json();\n            return value;\n        } else {\n            throw new Error('Server response wasn\\'t OK');\n        }\n    });\n}\n\nexport async function getQuestions(amount, difficulty, type) {\n    try {\n        store.dispatch(apiFetchBegin());\n        var response = await fetchAPi(amount, difficulty, type);\n        response = transformData(response.results);\n        store.dispatch(apiFetchSuccess(response));\n    } catch {\n        store.dispatch(apiFetchError());\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport logo from 'media/logo.svg';\nimport { getQuestions } from 'api/question-list';\nimport { Problem } from 'components';\nimport { getAnswer,\n    getAnswerOptions,\n    getQuestion,\n    getTotalQuestions,\n    getIndex,\n    getCategory,\n    getIsLoading\n} from 'selectors';\nimport { increaseIndex,\n    modifyCorrectAnswerCount\n} from 'actions';\nimport './main.css';\n\nclass main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n        this.renderContent = this.renderContent.bind(this);\n    }\n\n    componentDidMount() {\n        getQuestions(3, \"easy\", \"boolean\");\n    }\n\n    handleAnswerSelected(event) {\n        if (event.target.value === this.props.answer) {\n            this.props.rightAnswer();\n        }\n        if (this.props.index < this.props.totalQuestion-1) {\n            this.props.displayNextQs();\n        } else {\n            this.props.history.push('/');\n        }\n      }\n\n    renderContent() {\n        if (this.props.isLoading) {\n            return (\n                <div>\n                  <ClipLoader\n                    sizeUnit={\"px\"}\n                    size={150}\n                    color={'black'}\n                    loading={true}\n                  />\n                </div> \n              );\n        } else {\n            return (\n                <Problem\n                    answer={this.props.answer}\n                    answerOptions={this.props.answerOptions}\n                    questionId={this.props.index}\n                    question={this.props.question}\n                    questionTotal={this.props.totalQuestion}\n                    onAnswerSelected={this.handleAnswerSelected}\n                    category={this.props.category}\n                />\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\" >\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <h2>Questionnaire</h2>\n                </div>\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    totalQuestion: getTotalQuestions(state),\n    answer: getAnswer(state),\n    answerOptions: getAnswerOptions(state),\n    question: getQuestion(state),\n    index: getIndex(state),\n    category: getCategory(state),\n    isLoading: getIsLoading(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    displayNextQs() {\n        dispatch(increaseIndex());\n    },\n    rightAnswer() {\n        dispatch(modifyCorrectAnswerCount());\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(main);\n","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\n\nimport App from './containers/App';\nimport welcome from './containers/welcome/welcome';\nimport main from './containers/main/main';\n\nexport default (\n    <HashRouter>\n        <App>\n            <Switch>\n                <Route exact path=\"/\" component={welcome} />\n                <Route exact path=\"/main\" component={main} />\n            </Switch>\n        </App>\n    </HashRouter>\n);","import React from 'react';\nimport { render } from 'react-dom';\n\nimport routes from './routes';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nrender(\n    <Provider store={store}>\n        {routes}\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}