{"version":3,"sources":["media/logo.svg","media/plus.png","media/minus.png","containers/App.js","components/answer-option/answer-option.js","components/question/question.js","components/question-count/question-count.js","components/problem/problem.js","components/question-status/question-status.js","selectors/api-selectors.js","selectors/local-selectors.js","containers/welcome/welcome.js","store.js","reducers/local-reducers.js","reducers/api-reducers.js","actions/api-actions.js","api/question-list.js","containers/main/main.js","actions/local-actions.js","containers/result/result.js","routes.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","this","props","children","Component","AnswerOption","className","type","name","checked","answerContent","answer","id","value","disabled","onChange","onAnswerSelected","htmlFor","Question","content","QuestionCount","counter","total","Problem","key","questionId","questionTotal","category","question","answerOptions","map","answerId","listStyle","paddingLeft","paddingBottom","paddingRight","display","justifyContent","alignItems","contentStyle","flexDirection","textStyle","QuestionStatus","style","answerStatus","src","plus","alt","minus","getApiState","state","api","getMedia","media","getAnswer","getIndex","length","correct_answer","getAnswerOptions","options","getQuestion","getQuestionAnswerList","list","i","push","correctly_answered","getTotalQuestions","getCategory","getIsLoading","isFetching","getLocalState","local","index","getTotalQsRequested","totalQs","getCorrectUserAnswers","rightAns","getEntryOrExit","entry","welcome","logo","Link","to","connect","correctAnswers","dispatch","store","createStore","combineReducers","arguments","undefined","difficulty","Object","objectSpread","error","action","newMedia","payload","applyMiddleware","createLogger","apiFetchBegin","apiFetchSuccess","response","apiFetchError","shuffleArray","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","transformData","_","values","itemList","listItem","answerList","incorrect_answers","j","fetchAPi","amount","url","uri","parameters","join","addParameterToURL","fetch","then","ok","json","Error","_callee","regenerator_default","wrap","_context","prev","next","sent","results","t0","stop","main","_this","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleAnswerSelected","bind","assertThisInitialized","renderContent","_x","_x2","_x3","_getQuestions","apply","getQuestions","event","target","rightAnswer","totalQuestion","displayNextQs","history","isLoading","react_spinners","sizeUnit","size","color","loading","correctlyAnswered","divStyle","result","onClick","clearState","qsList","renderQsList","routes","HashRouter","containers_App","Switch","Route","exact","path","component","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.41848875.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.84287d09.svg\";","module.exports = __webpack_public_path__ + \"static/media/plus.afc7ba0a.png\";","module.exports = __webpack_public_path__ + \"static/media/minus.af7a9175.png\";","import React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n          {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './answer-option.css';\n\nexport function AnswerOption(props) {\n  return (\n    <div>\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerContent === props.answer}\n        id={props.id}\n        value={props.answerContent}\n        disabled={props.answer}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerContent}>\n        {props.answerContent}\n      </label>\n    </li>\n    <div className=\"answerOption\"/>\n    </div>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerId: PropTypes.number.isRequired,\n  questionId: PropTypes.number.isRequired,\n  answerContent: PropTypes.string.isRequired,\n  answer: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './question.css';\n\nexport function Question(props) {\n  return <h2 className=\"question\">{props.content}</h2>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './question-count.css';\n\nexport function QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Question, QuestionCount, AnswerOption } from 'components';\nimport './problem.css';\n\nexport function Problem(props) {\n\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.id}\n        answerContent={key.answer}\n        answerId={key.id}\n        answer={''}\n        questionId={props.questionId}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n      <div key={props.questionId}>\n        <QuestionCount counter={props.questionId+1} total={props.questionTotal} />\n        <div>{props.category}</div>\n        <Question content={props.question} />\n        <ul className=\"answerOptions\">\n          {props.answerOptions.map(renderAnswerOptions)}\n        </ul>\n      </div>\n  );\n}\n\nProblem.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default Problem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport plus from 'media/plus.png';\nimport minus from 'media/minus.png';\n\nconst listStyle = {\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingRight: 5,\n    display: 'flex',\n    justifyContent: 'start',\n    alignItems: 'start'\n}\n\nconst contentStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start',\n    alignItems: 'start'\n}\n\nconst textStyle = {\n    paddingLeft: 5,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start',\n    alignItems: 'start'\n}\n\nexport function QuestionStatus(props) {\n\n    function renderImage() {\n        if (props.answerStatus) {\n            return <img src={plus} className=\"plus\" alt=\"plus\"/>;\n        } else {\n            return <img src={minus} className=\"plus\" alt=\"plus\"/>;\n        }\n    }\n\n    return (\n        <div style={listStyle}>\n            {renderImage()}\n            <div style={textStyle}>\n                <span className=\"truncate\">{props.question}</span>\n                <div style={contentStyle}>\n                    <div>\n                        <strong>correct answer: </strong>\n                        <span>{props.answer}</span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nQuestionStatus.propTypes = {\n    question: PropTypes.string.isRequired,\n    answerStatus: PropTypes.bool.isRequired,\n    answer: PropTypes.string.isRequired,\n};\n\nexport default QuestionStatus;","import { getIndex } from \"selectors\";\n\n\nconst getApiState = (state) => state.api;\n\nconst getMedia = (state) => getApiState(state).media;\n\nexport const getAnswer = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].correct_answer;\n    }\n    return '';\n}\n\nexport const getAnswerOptions = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].options;\n    }\n    return [];\n}\n\nexport const getQuestion = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].question;\n    }\n    return '';\n}\n\nexport const getQuestionAnswerList = (state) => {\n    const media = getMedia(state);\n    const list = [];\n    for (var i = 0; i < media.length; i++) {\n        list.push({\n            id: i,\n            question: media[i].question,\n            answer: media[i].correct_answer,\n            correctly_answered: media[i].correctly_answered,\n        })\n    }\n    return list;\n}\n\nexport const getTotalQuestions = (state) => {\n    const media = getMedia(state);\n    return media.length;\n}\n\nexport const getCategory = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].category;\n    }\n    return '';\n}\n\nexport const getIsLoading = (state) => getApiState(state).isFetching;\n\nexport const getAnswerStatusForUser = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].correctly_answered;\n    }\n    return false;\n}","const getLocalState = (state) => state.local;\n\nexport const getIndex = (state) => getLocalState(state).index;\n\nexport const getTotalQsRequested = (state) => getLocalState(state).totalQs;\n\nexport const getCorrectUserAnswers = (state) => getLocalState(state).rightAns;\n\nexport const getType = (state) => getLocalState(state).type;\n\nexport const getDifficulty = (state) => getLocalState(state).difficulty;\n\nexport const getEntryOrExit = (state) => getLocalState(state).entry;","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport logo from 'media/logo.svg';\nimport { Question } from 'components';\nimport { getEntryOrExit, getCorrectUserAnswers, getTotalQsRequested } from 'selectors';\nimport './welcome.css';\n\n\nclass welcome extends Component {\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\" >\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <h2>Welcome to the Trivia Challenge!!</h2>\n                </div>\n                <div>\n                    <br/>\n                    <Question content={\"You'll be presented with 10 multiple choice Questions.\"} />\n                    <br/>\n                    <Question content={\"Can you score 100%?\"} />\n                    <br/>\n                    <Link to=\"/main\" className=\"btn btn-primary\">\n                        Let's find out\n                    </Link>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    entry: getEntryOrExit(state),\n    correctAnswers: getCorrectUserAnswers(state),\n    totalQs: getTotalQsRequested(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(welcome);","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { localReducer, apiReducer } from './reducers';\n\nexport const store = createStore(combineReducers({\n    local: localReducer,\n    api: apiReducer\n}), {}, applyMiddleware(createLogger()));","export const localReducer = (\n    state = {\n        index: 0,\n        rightAns: 0,\n        totalQs: 10,\n        type: \"multiple\",\n        difficulty: \"hard\",\n        entry: 1,\n    }, action) => {\n    \n    switch(action.type) {\n        case \"CLEAR_LOCAL_STATE\":\n            state = {\n                ...state,\n                entry: 1,\n                index: 0,\n                rightAns: 0,\n                totalQs: 10,\n            }\n            break;\n        case \"RENDER_RESULT_NEXT\":\n            state = {\n                ...state,\n                entry: 0,\n            }\n            break;\n        case \"INCREASE_INDEX\":\n            state = {\n                ...state,\n                index: state.index + 1,\n            }\n            break;\n        case \"CORRECT_ANSWER_COUNT\":\n            state = {\n                ...state,\n                rightAns: state.rightAns + 1\n            }\n            break;\n        default:\n            break;\n    }\n    return state;\n};","export const apiReducer = (\n    state = {\n        media: [],\n        isFetching: false,\n        error: undefined,\n    }, action) => {\n    \n    switch(action.type) {\n        case \"CORRECTLY_ANSWERED\":\n            const newMedia = state.media;\n            if (action.payload !== undefined) {\n                newMedia[action.payload].correctly_answered = true;\n            }\n            state = {\n                ...state,\n                media: newMedia\n            }\n            break;\n        case \"CLEAR_API_STATE\":\n            state = {\n                media: [],\n                isFetching: false,\n                error: true,\n            }\n            break; \n        case \"FETCH\":\n            state = {\n                ...state,\n                isFetching: true,\n                error: undefined,\n            }\n            break;        \n        case \"POPULATE\":\n            state = {\n                ...state,\n                isFetching: false,\n                media: action.payload,\n                error: undefined,\n            }\n            break;\n        case \"ERROR\":\n            state = {\n                ...state,\n                isFetching: false,\n                error: true,\n            }\n            break;    \n        default:\n            break;\n    }\n    return state;\n};","export const apiFetchBegin = () => ({\n    type: \"FETCH\",\n});\n\nexport const apiFetchSuccess = (response) => ({\n    type: \"POPULATE\",\n    payload: response,\n});\n\nexport const apiFetchError = () => ({\n    type: \"ERROR\"\n});\n\nexport const clearAPIState = () => ({\n    type: \"CLEAR_API_STATE\"\n});\n\nexport const correctlyAnswered = (index) => ({\n    type: \"CORRECTLY_ANSWERED\",\n    payload: index\n})","import _ from 'lodash';\nimport { store } from '../store.js';\nimport { apiFetchBegin, apiFetchSuccess, apiFetchError } from 'actions';\n\nfunction addParameterToURL(uri, amount, difficulty, type) {\n    let parameters = [];\n    if (amount !== undefined) {\n        parameters.push('amount=' + amount);\n    }\n    if (difficulty !== undefined) {\n        parameters.push('difficulty=' + difficulty);\n    }\n    if (type !== undefined) {\n        parameters.push('type=' + type);\n    }\n    return uri + '?' + parameters.join('&');\n}\n\nfunction shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].index) {\n            array[i].index = i;\n        }\n    }\n\n    return array;\n}\n\nexport function transformData(array) {\n    var list = _.values(array);\n    var itemList = [];\n    for ( let i = 0; i < list.length; i++) {\n        const listItem = list[i];\n        var answerList = _.values(listItem.incorrect_answers);\n        answerList.push(listItem.correct_answer);\n        answerList = shuffleArray(answerList);\n        var options = [];\n        for (var j = 0;j < answerList.length; j++) {\n            options.push({\n                answer: answerList[j],\n                id: j\n            });\n        };\n        itemList.push({\n            index: i,\n            correctly_answered: false,\n            category: listItem.category,\n            question: listItem.question,\n            correct_answer: listItem.correct_answer,\n            options: options\n        });\n    }\n    itemList = shuffleArray(itemList);\n    return itemList;\n}\n\nfunction fetchAPi(amount, difficulty, type) {\n    const url = addParameterToURL(\"https://opentdb.com/api.php\", amount, difficulty, type);\n\n    return fetch(url)\n    .then(response => {\n        if(response.ok) {\n            var value = response.json();\n            return value;\n        } else {\n            throw new Error('Server response wasn\\'t OK');\n        }\n    });\n}\n\nexport async function getQuestions(amount, difficulty, type) {\n    try {\n        store.dispatch(apiFetchBegin());\n        var response = await fetchAPi(amount, difficulty, type);\n        response = transformData(response.results);\n        store.dispatch(apiFetchSuccess(response));\n    } catch {\n        store.dispatch(apiFetchError());\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport logo from 'media/logo.svg';\nimport { getQuestions } from 'api/question-list';\nimport { Problem } from 'components';\nimport { getAnswer,\n    getAnswerOptions,\n    getQuestion,\n    getTotalQuestions,\n    getIndex,\n    getCategory,\n    getIsLoading\n} from 'selectors';\nimport { increaseIndex,\n    modifyCorrectAnswerCount,\n    correctlyAnswered\n} from 'actions';\nimport './main.css';\n\nclass main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n        this.renderContent = this.renderContent.bind(this);\n    }\n\n    componentDidMount() {\n        getQuestions(10, \"easy\", \"multiple\");\n    }\n\n    handleAnswerSelected(event) {\n        if (event.target.value === this.props.answer) {\n            this.props.rightAnswer(this.props.index);\n        }\n        if (this.props.index < this.props.totalQuestion-1) {\n            this.props.displayNextQs();\n        } else {\n            this.props.history.push('/result');\n        }\n      }\n\n    renderContent() {\n        if (this.props.isLoading) {\n            return (\n                <div>\n                  <ClipLoader\n                    sizeUnit={\"px\"}\n                    size={150}\n                    color={'black'}\n                    loading={true}\n                  />\n                </div> \n              );\n        } else {\n            return (\n                <Problem\n                    answer={this.props.answer}\n                    answerOptions={this.props.answerOptions}\n                    questionId={this.props.index}\n                    question={this.props.question}\n                    questionTotal={this.props.totalQuestion}\n                    onAnswerSelected={this.handleAnswerSelected}\n                    category={this.props.category}\n                />\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\" >\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <h2>Questionnaire</h2>\n                </div>\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    totalQuestion: getTotalQuestions(state),\n    answer: getAnswer(state),\n    answerOptions: getAnswerOptions(state),\n    question: getQuestion(state),\n    index: getIndex(state),\n    category: getCategory(state),\n    isLoading: getIsLoading(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    displayNextQs() {\n        dispatch(increaseIndex());\n    },\n    rightAnswer(index) {\n        dispatch(modifyCorrectAnswerCount());\n        dispatch(correctlyAnswered(index));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(main);\n","export const increaseIndex = () => ({\n    type: \"INCREASE_INDEX\"\n});\n\nexport const modifyCorrectAnswerCount = () => ({\n    type: \"CORRECT_ANSWER_COUNT\",\n});\n\nexport const clearLocalState = () => ({\n    type: \"CLEAR_LOCAL_STATE\"\n});\n\nexport const renderResultNext = () => ({\n    type: \"RENDER_RESULT_NEXT\"\n});","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport logo from 'media/logo.svg';\nimport { Question, QuestionStatus } from 'components';\nimport { getCorrectUserAnswers, getTotalQsRequested, getQuestionAnswerList } from 'selectors';\nimport { clearAPIState, clearLocalState } from 'actions';\nimport './result.css';\n\nconst divStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n};\n\nclass result extends Component {\n\n    renderQsList(key) {\n        return (\n            <QuestionStatus\n                id={key.id}\n                question={key.question}\n                answerStatus={key.correctly_answered}\n                answer={key.answer}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <div className=\"App-header\" >\n                    <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n                    <h2>Congratulations, you completed the challenge!!</h2>\n                </div>\n                <div style={divStyle}>\n                    <br/>\n                    <Question content={\"You scored \" + this.props.correctAnswers + \" of \" + this.props.totalQs} />\n                    <br/>\n                    <Link to=\"/\" className=\"btn btn-primary\" onClick={this.props.clearState}>\n                        Would you like to replay?\n                    </Link>\n                </div>\n                <ul>\n                    {this.props.qsList.map(this.renderQsList)}\n                </ul>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    correctAnswers: getCorrectUserAnswers(state),\n    totalQs: getTotalQsRequested(state),\n    qsList: getQuestionAnswerList(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    clearState: () => {\n        dispatch(clearAPIState());\n        dispatch(clearLocalState());\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(result);","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\n\nimport App from './containers/App';\nimport welcome from './containers/welcome/welcome';\nimport main from './containers/main/main';\nimport result from './containers/result/result';\n\nexport default (\n    <HashRouter>\n        <App>\n            <Switch>\n                <Route exact path=\"/\" component={welcome} />\n                <Route exact path=\"/main\" component={main} />\n                <Route exact path=\"/result\" component={result} />\n            </Switch>\n        </App>\n    </HashRouter>\n);","import React from 'react';\nimport { render } from 'react-dom';\n\nimport routes from './routes';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nrender(\n    <Provider store={store}>\n        {routes}\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}