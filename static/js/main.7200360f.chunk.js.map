{"version":3,"sources":["media/plus.png","media/minus.png","media/logo.svg","containers/App.js","components/answer-option/answer-option.js","components/question/question.js","components/question-count/question-count.js","components/problem/problem.js","components/question-status/question-status.js","components/choice-option/choice-option.js","components/choice/choice.js","components/header/header.js","selectors/api-selectors.js","selectors/local-selectors.js","actions/api-actions.js","containers/welcome/welcome.js","actions/local-actions.js","store.js","reducers/local-reducers.js","reducers/api-reducers.js","api/question-list.js","containers/main/main.js","containers/result/result.js","routes.js","index.js"],"names":["module","exports","__webpack_require__","p","App","react_default","a","createElement","this","props","children","Component","AnswerOption","className","type","name","checked","answerContent","answer","id","value","onChange","onAnswerSelected","htmlFor","replace","Question","style","textStyle","content","QuestionCount","counter","total","Problem","questionId","questionTotal","category","question","answerOptions","map","key","listStyle","paddingLeft","paddingBottom","paddingRight","display","justifyContent","alignItems","contentStyle","flexDirection","QuestionStatus","answerStatus","src","plus","alt","minus","ChoiceOption","selected","onChoiceSelected","divStyle","Choice","header","choiceOptions","undefined","Header","logo","getApiState","state","api","getMedia","media","getAnswer","getIndex","length","correct_answer","getAnswerOptions","options","getQuestion","getQuestionAnswerList","list","i","push","correctly_answered","getTotalQuestions","getCategory","getIsLoading","isFetching","getLocalState","local","index","getTotalQsRequested","totalQs","getCorrectUserAnswers","rightAns","getType","getDifficulty","difficulty","apiFetchBegin","apiFetchSuccess","response","payload","apiFetchError","marginLeft","difficultyOption","qsTypeOption","quizSizeOption","welcome","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleDifficultySelected","bind","assertThisInitialized","handleTypeSelected","handleSizeSelected","event","target","qsType","Number","typeSelected","difficultySelected","totalQsSelected","toString","Link","to","connect","correctAnswers","dispatch","size","modifytotalQs","diff","modifyDifficulty","modifyType","store","createStore","combineReducers","arguments","action","objectSpread","error","newMedia","applyMiddleware","createLogger","shuffleArray","array","temporaryValue","randomIndex","currentIndex","Math","floor","random","transformData","_","values","itemList","listItem","answerList","incorrect_answers","j","fetchAPi","amount","url","uri","parameters","join","addParameterToURL","console","log","fetch","then","ok","json","Error","_callee","regenerator_default","wrap","_context","prev","next","sent","results","t0","stop","main","handleAnswerSelected","renderContent","_x","_x2","_x3","_getQuestions","apply","getQuestions","qsRequested","difficultyRequested","typeRequested","rightAnswer","totalQuestion","displayNextQs","history","isLoading","react_spinners","sizeUnit","color","loading","correctlyAnswered","result","onClick","clearState","qsList","renderQsList","routes","HashRouter","containers_App","Switch","Route","exact","path","component","render","es","document","getElementById"],"mappings":"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","file":"static/js/main.7200360f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/plus.afc7ba0a.png\";","module.exports = __webpack_public_path__ + \"static/media/minus.af7a9175.png\";","module.exports = __webpack_public_path__ + \"static/media/logo.84287d09.svg\";","import React, { Component } from 'react';\n\nclass App extends Component {\n  render() {\n    return (\n      <div>\n          {this.props.children}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './answer-option.css';\n\nexport function AnswerOption(props) {\n  return (\n    <div>\n    <li className=\"answerOption\">\n      <input\n        type=\"radio\"\n        className=\"radioCustomButton\"\n        name=\"radioGroup\"\n        checked={props.answerContent === props.answer}\n        id={props.answerContent}\n        value={props.answerContent}\n        onChange={props.onAnswerSelected}\n      />\n      <label className=\"radioCustomLabel\" htmlFor={props.answerContent}>\n        {props.answerContent.replace(/&quot;/g,'\"')\n                            .replace(/&#039;/g,\"'\")\n                            .replace(/&ocirc;/g, \"ô\")\n                            .replace(/&amp;/g,' & ')}\n      </label>\n    </li>\n    <div className=\"answerOption\"/>\n    </div>\n  );\n}\n\nAnswerOption.propTypes = {\n  answerContent: PropTypes.string.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './question.css';\n\nexport function Question(props) {\n  return <h2 className=\"question\" style={props.textStyle}>\n    {props.content.replace(/&quot;/g,'\"')\n                  .replace(/&#039;/g,\"'\")\n                  .replace(/&ocirc;/g, \"ô\")\n                  .replace(/&amp;/g,' & ')}\n  </h2>;\n}\n\nQuestion.propTypes = {\n  content: PropTypes.string.isRequired,\n  textStyle: PropTypes.object\n};\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './question-count.css';\n\nexport function QuestionCount(props) {\n  return (\n    <div className=\"questionCount\">\n      Question <span>{props.counter}</span> of <span>{props.total}</span>\n    </div>\n  );\n}\n\nQuestionCount.propTypes = {\n  counter: PropTypes.number.isRequired,\n  total: PropTypes.number.isRequired\n};\n\nexport default QuestionCount;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Question, QuestionCount, AnswerOption } from 'components';\nimport './problem.css';\n\nexport function Problem(props) {\n\n  function renderAnswerOptions(key) {\n    return (\n      <AnswerOption\n        key={key.id}\n        answerContent={key.answer}\n        onAnswerSelected={props.onAnswerSelected}\n      />\n    );\n  }\n\n  return (\n    <div>\n      <QuestionCount counter={props.questionId+1} total={props.questionTotal} />\n      <div>{props.category}</div>\n      <Question content={props.question} />\n      <ul className=\"answerOptions\">\n        {props.answerOptions.map(renderAnswerOptions)}\n      </ul>\n    </div>\n  );\n}\n\nProblem.propTypes = {\n  answer: PropTypes.string.isRequired,\n  answerOptions: PropTypes.array.isRequired,\n  question: PropTypes.string.isRequired,\n  questionId: PropTypes.number.isRequired,\n  questionTotal: PropTypes.number.isRequired,\n  onAnswerSelected: PropTypes.func.isRequired,\n  category: PropTypes.string.isRequired,\n};\n\nexport default Problem;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport plus from 'media/plus.png';\nimport minus from 'media/minus.png';\n\nconst listStyle = {\n    paddingLeft: 30,\n    paddingBottom: 10,\n    paddingRight: 5,\n    display: 'flex',\n    justifyContent: 'start',\n    alignItems: 'start'\n}\n\nconst contentStyle = {\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start',\n    alignItems: 'start'\n}\n\nconst textStyle = {\n    paddingLeft: 5,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'start',\n    alignItems: 'start'\n}\n\nexport function QuestionStatus(props) {\n\n    function renderImage() {\n        if (props.answerStatus) {\n            return <img src={plus} className=\"plus\" alt=\"plus\"/>;\n        } else {\n            return <img src={minus} className=\"plus\" alt=\"plus\"/>;\n        }\n    }\n\n    return (\n        <div style={listStyle}>\n            {renderImage()}\n            <div style={textStyle}>\n                <span className=\"truncate\">\n                    {props.question.replace(/&quot;/g,'\"')\n                                   .replace(/&#039;/g,\"'\")\n                                   .replace(/&ocirc;/g, \"ô\")\n                                   .replace(/&amp;/g,' & ')}\n                </span>\n                <div style={contentStyle}>\n                    <div>\n                        <strong>correct answer: </strong>\n                        <span>\n                            {props.answer.replace(/&quot;/g,'\"')\n                                         .replace(/&#039;/g,\"'\")\n                                         .replace(/&ocirc;/g, \"ô\")\n                                         .replace(/&amp;/g,' & ')}\n                        </span>\n                    </div>\n                </div>\n            </div>\n        </div>\n    );\n}\n\nQuestionStatus.propTypes = {\n    question: PropTypes.string.isRequired,\n    answerStatus: PropTypes.bool.isRequired,\n    answer: PropTypes.string.isRequired,\n};\n\nexport default QuestionStatus;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './choice-option.css';\n\nexport function ChoiceOption(props) {\n\n  function renderSelectedComponentDifferent() {\n    if (props.selected) {\n      return (\n        <li className=\"choiceOptionSelected\">\n          <input\n            type=\"radio\"\n            className=\"cradioCustomButton\"\n            name=\"cradioGroup\"\n            id={props.answerContent}\n            value={props.answerContent}\n            onChange={props.onChoiceSelected}\n          />\n          <label className=\"cradioCustomLabel\" htmlFor={props.answerContent}>\n            {props.answerContent}\n          </label>\n        </li>\n      );\n    } else {\n      return (\n      <li className=\"choiceOption\">\n        <input\n          type=\"radio\"\n          className=\"cradioCustomButton\"\n          name=\"cradioGroup\"\n          id={props.answerContent}\n          value={props.answerContent}\n          onChange={props.onChoiceSelected}\n        />\n        <label className=\"cradioCustomLabel\" htmlFor={props.answerContent}>\n          {props.answerContent}\n        </label>\n      </li>\n      );\n    }\n  }\n\n  return (\n    renderSelectedComponentDifferent()\n  );\n}\n\nChoiceOption.propTypes = {\n  answerContent: PropTypes.string.isRequired,\n  onChoiceSelected: PropTypes.func.isRequired,\n  selected: PropTypes.bool\n};","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Question, ChoiceOption } from 'components';\n\nconst divStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n};\n\nconst textStyle = {\n    display: 'flex',\n    justifyContent: 'start',\n    alignItems: 'start'\n};\n\nexport function Choice(props) {\n\n    function renderChoiceOptions(key) {\n        if (props.selected === key.type || (key.type===\"mix it up\" && props.selected===undefined)) {\n            return (\n                <ChoiceOption\n                    key={key.id}\n                    answerContent={key.type}\n                    onChoiceSelected={props.onChoiceSelected}\n                    selected={true}\n                />\n            );\n        }\n        return (\n            <ChoiceOption\n                key={key.id}\n                answerContent={key.type}\n                onChoiceSelected={props.onChoiceSelected}\n            />\n        );\n    }\n\n    return (\n        <div>\n            <Question content={props.header} textStyle={textStyle}/>\n            <ul style={divStyle}>\n                {props.choiceOptions.map(renderChoiceOptions)}\n            </ul>\n        </div>\n    );\n}\n\nChoice.propTypes = {\n    header: PropTypes.string.isRequired,\n    choiceOptions: PropTypes.array.isRequired,\n    onChoiceSelected: PropTypes.func.isRequired,\n    selected: PropTypes.string\n}\n\nexport default Choice;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './header.css';\nimport logo from 'media/logo.svg';\n\nexport function Header(props) {\n    return (\n        <div className=\"App-header\" >\n            <img src={logo} className=\"App-logo\" alt=\"logo\"/>\n            <h2>{props.content}</h2>\n        </div>\n    )\n}\n\nHeader.propTypes = {\n    content: PropTypes.string.isRequired,\n}","import { getIndex } from \"selectors\";\n\n\nconst getApiState = (state) => state.api;\n\nconst getMedia = (state) => getApiState(state).media;\n\nexport const getAnswer = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].correct_answer;\n    }\n    return '';\n}\n\nexport const getAnswerOptions = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].options;\n    }\n    return [];\n}\n\nexport const getQuestion = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].question;\n    }\n    return '';\n}\n\nexport const getQuestionAnswerList = (state) => {\n    const media = getMedia(state);\n    const list = [];\n    for (var i = 0; i < media.length; i++) {\n        list.push({\n            id: i,\n            question: media[i].question,\n            answer: media[i].correct_answer,\n            correctly_answered: media[i].correctly_answered,\n        })\n    }\n    return list;\n}\n\nexport const getTotalQuestions = (state) => {\n    const media = getMedia(state);\n    return media.length;\n}\n\nexport const getCategory = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].category;\n    }\n    return '';\n}\n\nexport const getIsLoading = (state) => getApiState(state).isFetching;\n\nexport const getAnswerStatusForUser = (state) => {\n    const media = getMedia(state);\n    if (getIndex(state) < media.length) {\n        return media[getIndex(state)].correctly_answered;\n    }\n    return false;\n}","const getLocalState = (state) => state.local;\n\nexport const getIndex = (state) => getLocalState(state).index;\n\nexport const getTotalQsRequested = (state) => getLocalState(state).totalQs;\n\nexport const getCorrectUserAnswers = (state) => getLocalState(state).rightAns;\n\nexport const getType = (state) => getLocalState(state).type;\n\nexport const getDifficulty = (state) => getLocalState(state).difficulty;","export const apiFetchBegin = () => ({\n    type: \"FETCH\",\n});\n\nexport const apiFetchSuccess = (response) => ({\n    type: \"POPULATE\",\n    payload: response,\n});\n\nexport const apiFetchError = () => ({\n    type: \"ERROR\"\n});\n\nexport const clearAPIState = () => ({\n    type: \"CLEAR_API_STATE\"\n});\n\nexport const correctlyAnswered = (index) => ({\n    type: \"CORRECTLY_ANSWERED\",\n    payload: index\n})","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { Choice, Header } from 'components';\nimport { getCorrectUserAnswers, getTotalQsRequested, getType, getDifficulty } from 'selectors';\nimport { modifytotalQs, modifyDifficulty, modifyType} from 'actions';\nimport './welcome.css';\n\nconst divStyle = {\n    display: 'flex',\n    alignItems: 'flex-start',\n    justifyContent: 'flex-start',\n    marginLeft: '4.5rem'\n};\n\nconst difficultyOption = [{id: 0, type: \"easy\"},\n                          {id: 1, type: \"medium\"},\n                          {id: 2, type: \"hard\"}];\n\nconst qsTypeOption = [{id: 0, type: \"boolean\"},\n                          {id: 1, type: \"multiple\"},\n                          {id: 2, type: \"mix it up\"}];\n\nconst quizSizeOption = [{id: 0, type: \"5\"},\n                          {id: 1, type: \"10\"},\n                          {id: 2, type: \"20\"}];\n\nclass welcome extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleDifficultySelected = this.handleDifficultySelected.bind(this);\n        this.handleTypeSelected = this.handleTypeSelected.bind(this);\n        this.handleSizeSelected = this.handleSizeSelected.bind(this);\n    }\n\n    handleDifficultySelected(event) {\n        this.props.difficulty(event.target.value);\n    }\n\n    handleTypeSelected(event) {\n        if (event.target.value === \"mix it up\") {\n            this.props.qsType(undefined);\n        } else {\n            this.props.qsType(event.target.value);\n        }\n    }\n\n    handleSizeSelected(event) {\n        this.props.totalQs(Number(event.target.value));\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header content={\"Welcome to the Trivia Challenge!!\"}/>\n                <div>\n                    <Choice \n                        header={\"Question Type:\"}\n                        choiceOptions={qsTypeOption}\n                        onChoiceSelected={this.handleTypeSelected}\n                        selected={this.props.typeSelected}\n                    />\n                    <Choice \n                        header={\"Difficulty:\"}\n                        choiceOptions={difficultyOption}\n                        onChoiceSelected={this.handleDifficultySelected}\n                        selected={this.props.difficultySelected}\n                    />\n                    <Choice \n                        header={\"Exected Quiz Size:\"}\n                        choiceOptions={quizSizeOption}\n                        onChoiceSelected={this.handleSizeSelected}\n                        selected={this.props.totalQsSelected.toString()}\n                    />\n                    <br/>\n                    <div style={divStyle}>\n                        <Link to=\"/main\" className=\"btn btn-primary\">\n                            Let's Start\n                        </Link>\n                    </div>\n                </div>\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    correctAnswers: getCorrectUserAnswers(state),\n    totalQsSelected: getTotalQsRequested(state),\n    typeSelected: getType(state),\n    difficultySelected: getDifficulty(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    totalQs(size) {\n        dispatch(modifytotalQs(size));\n    },\n    difficulty(diff) {\n        dispatch(modifyDifficulty(diff));\n    },\n    qsType(type) {\n        dispatch(modifyType(type));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(welcome);","export const increaseIndex = () => ({\n    type: \"INCREASE_INDEX\"\n});\n\nexport const modifyCorrectAnswerCount = () => ({\n    type: \"CORRECT_ANSWER_COUNT\",\n});\n\nexport const modifytotalQs = (size) => ({\n    type: \"MODIFY_TOTAL_QS\",\n    payload: size\n});\n\nexport const modifyDifficulty = (diff) => ({\n    type: \"MODIFY_DIFFICULTY\",\n    payload: diff\n});\n\nexport const modifyType = (type) => ({\n    type: \"MODIFY_TYPE\",\n    payload: type\n});\n\nexport const clearLocalState = () => ({\n    type: \"CLEAR_LOCAL_STATE\"\n});\n","import { createStore, combineReducers, applyMiddleware } from 'redux';\nimport { createLogger } from 'redux-logger';\nimport { localReducer, apiReducer } from './reducers';\n\nexport const store = createStore(combineReducers({\n    local: localReducer,\n    api: apiReducer\n}), {}, applyMiddleware(createLogger()));","export const localReducer = (\n    state = {\n        index: 0,\n        rightAns: 0,\n        totalQs: 10,\n        type: \"boolean\",\n        difficulty: \"hard\",\n    }, action) => {\n    \n    switch(action.type) {\n        case \"MODIFY_TOTAL_QS\":\n            state = {\n                ...state,\n                totalQs: action.payload\n            }\n            break;\n        case \"MODIFY_DIFFICULTY\":\n            state = {\n                ...state,\n                difficulty: action.payload\n            }\n            break;\n        case \"MODIFY_TYPE\":\n            state = {\n                ...state,\n                type: action.payload\n            }\n            break;\n        case \"CLEAR_LOCAL_STATE\":\n            state = {\n                ...state,\n                index: 0,\n                rightAns: 0,\n                totalQs: 10,\n                type: \"boolean\",\n                difficulty: \"hard\",\n            }\n            break;\n        case \"INCREASE_INDEX\":\n            state = {\n                ...state,\n                index: state.index + 1,\n            }\n            break;\n        case \"CORRECT_ANSWER_COUNT\":\n            state = {\n                ...state,\n                rightAns: state.rightAns + 1\n            }\n            break;\n        default:\n            break;\n    }\n    return state;\n};","export const apiReducer = (\n    state = {\n        media: [],\n        isFetching: false,\n        error: undefined,\n    }, action) => {\n    \n    switch(action.type) {\n        case \"CORRECTLY_ANSWERED\":\n            const newMedia = state.media;\n            if (action.payload !== undefined) {\n                newMedia[action.payload].correctly_answered = true;\n            }\n            state = {\n                ...state,\n                media: newMedia\n            }\n            break;\n        case \"CLEAR_API_STATE\":\n            state = {\n                media: [],\n                isFetching: false,\n                error: true,\n            }\n            break; \n        case \"FETCH\":\n            state = {\n                ...state,\n                isFetching: true,\n                error: undefined,\n            }\n            break;        \n        case \"POPULATE\":\n            state = {\n                ...state,\n                isFetching: false,\n                media: action.payload,\n                error: undefined,\n            }\n            break;\n        case \"ERROR\":\n            state = {\n                ...state,\n                isFetching: false,\n                error: true,\n            }\n            break;    \n        default:\n            break;\n    }\n    return state;\n};","import _ from 'lodash';\nimport { store } from '../store.js';\nimport { apiFetchBegin, apiFetchSuccess, apiFetchError } from 'actions';\n\nfunction addParameterToURL(uri, amount, difficulty, type) {\n    let parameters = [];\n    if (amount !== undefined) {\n        parameters.push('amount=' + amount);\n    }\n    if (difficulty !== undefined) {\n        parameters.push('difficulty=' + difficulty);\n    }\n    if (type !== undefined) {\n        parameters.push('type=' + type);\n    }\n    return uri + '?' + parameters.join('&');\n}\n\nfunction shuffleArray(array) {\n    var currentIndex = array.length,\n      temporaryValue,\n      randomIndex;\n\n    // While there remain elements to shuffle...\n    while (0 !== currentIndex) {\n      // Pick a remaining element...\n      randomIndex = Math.floor(Math.random() * currentIndex);\n      currentIndex -= 1;\n\n      // And swap it with the current element.\n      temporaryValue = array[currentIndex];\n      array[currentIndex] = array[randomIndex];\n      array[randomIndex] = temporaryValue;\n    }\n\n    for (var i = 0; i < array.length; i++) {\n        if (array[i].index) {\n            array[i].index = i;\n        }\n    }\n\n    return array;\n}\n\nexport function transformData(array) {\n    var list = _.values(array);\n    var itemList = [];\n    for ( let i = 0; i < list.length; i++) {\n        const listItem = list[i];\n        var answerList = _.values(listItem.incorrect_answers);\n        answerList.push(listItem.correct_answer);\n        answerList = shuffleArray(answerList);\n        var options = [];\n        for (var j = 0;j < answerList.length; j++) {\n            options.push({\n                answer: answerList[j],\n                id: j\n            });\n        };\n        itemList.push({\n            index: i,\n            correctly_answered: false,\n            category: listItem.category,\n            question: listItem.question,\n            correct_answer: listItem.correct_answer,\n            options: options\n        });\n    }\n    itemList = shuffleArray(itemList);\n    return itemList;\n}\n\nfunction fetchAPi(amount, difficulty, type) {\n    const url = addParameterToURL(\"https://opentdb.com/api.php\", amount, difficulty, type);\n    console.log('anupriya gupta', url);\n    return fetch(url)\n    .then(response => {\n        if(response.ok) {\n            var value = response.json();\n            return value;\n        } else {\n            throw new Error('Server response wasn\\'t OK');\n        }\n    });\n}\n\nexport async function getQuestions(amount, difficulty, type) {\n    try {\n        store.dispatch(apiFetchBegin());\n        var response = await fetchAPi(amount, difficulty, type);\n        response = transformData(response.results);\n        store.dispatch(apiFetchSuccess(response));\n    } catch {\n        store.dispatch(apiFetchError());\n    }\n}\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport { ClipLoader } from 'react-spinners';\nimport { getQuestions } from 'api/question-list';\nimport { Problem, Header } from 'components';\nimport { getAnswer,\n    getAnswerOptions,\n    getQuestion,\n    getTotalQuestions,\n    getIndex,\n    getCategory,\n    getIsLoading,\n    getTotalQsRequested,\n    getType,\n    getDifficulty\n} from 'selectors';\nimport { increaseIndex,\n    modifyCorrectAnswerCount,\n    correctlyAnswered\n} from 'actions';\nimport './main.css';\n\nclass main extends Component {\n\n    constructor(props) {\n        super(props);\n        this.handleAnswerSelected = this.handleAnswerSelected.bind(this);\n        this.renderContent = this.renderContent.bind(this);\n    }\n\n    componentDidMount() {\n        getQuestions(this.props.qsRequested, this.props.difficultyRequested, this.props.typeRequested);\n    }\n\n    handleAnswerSelected(event) {\n        if (event.target.value === this.props.answer) {\n            this.props.rightAnswer(this.props.index);\n        }\n        if (this.props.index < this.props.totalQuestion-1) {\n            this.props.displayNextQs();\n        } else {\n            this.props.history.push('/result');\n        }\n    }\n\n    renderContent() {\n        if (this.props.isLoading) {\n            return (\n                <div>\n                  <ClipLoader\n                    sizeUnit={\"px\"}\n                    size={150}\n                    color={'black'}\n                    loading={true}\n                  />\n                </div> \n              );\n        } else {\n            return (\n                <Problem\n                    answer={this.props.answer}\n                    answerOptions={this.props.answerOptions}\n                    questionId={this.props.index}\n                    question={this.props.question}\n                    questionTotal={this.props.totalQuestion}\n                    onAnswerSelected={this.handleAnswerSelected}\n                    category={this.props.category}\n                />\n            );\n        }\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header content={\"Questionnaire\"}/>\n                {this.renderContent()}\n            </div>\n        );\n    }\n}\n\nconst mapStateToProps = (state) => ({\n    totalQuestion: getTotalQuestions(state),\n    answer: getAnswer(state),\n    answerOptions: getAnswerOptions(state),\n    question: getQuestion(state),\n    index: getIndex(state),\n    category: getCategory(state),\n    isLoading: getIsLoading(state),\n    qsRequested: getTotalQsRequested(state),\n    typeRequested: getType(state),\n    difficultyRequested: getDifficulty(state)\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    displayNextQs() {\n        dispatch(increaseIndex());\n    },\n    rightAnswer(index) {\n        dispatch(modifyCorrectAnswerCount());\n        dispatch(correctlyAnswered(index));\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(main);\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport { connect } from 'react-redux';\nimport { Question, QuestionStatus, Header } from 'components';\nimport { getCorrectUserAnswers, getTotalQsRequested, getQuestionAnswerList } from 'selectors';\nimport { clearAPIState, clearLocalState } from 'actions';\nimport './result.css';\n\nconst divStyle = {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'space-around',\n};\n\nconst textStyle = {\n    display: 'flex',\n    justifyContent: 'start',\n    alignItems: 'start'\n}\n\nclass result extends Component {\n\n    renderQsList(key) {\n        return (\n            <QuestionStatus\n                key={key.id}\n                question={key.question}\n                answerStatus={key.correctly_answered}\n                answer={key.answer}\n            />\n        );\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header content={\"Congratulations, you completed the challenge!!\"}/>\n                <div style={divStyle}>\n                    <br/>\n                    <Question\n                        content={\"You scored \" + this.props.correctAnswers + \" of \" + this.props.totalQs}\n                        textStyle={textStyle}/>\n                    <br/>\n                    <Link to=\"/\" className=\"btn btn-primary\" onClick={this.props.clearState}>\n                        Would you like to replay?\n                    </Link>\n                </div>\n                <ul>\n                    {this.props.qsList.map(this.renderQsList)}\n                </ul>\n            </div>\n        );\n    }\n}\nconst mapStateToProps = (state) => ({\n    correctAnswers: getCorrectUserAnswers(state),\n    totalQs: getTotalQsRequested(state),\n    qsList: getQuestionAnswerList(state),\n});\n\nconst mapDispatchToProps = (dispatch) => ({\n    clearState: () => {\n        dispatch(clearAPIState());\n        dispatch(clearLocalState());\n    }\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(result);","import React from 'react';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport \"react-bootstrap/dist/react-bootstrap.min.js\";\n\nimport App from './containers/App';\nimport welcome from './containers/welcome/welcome';\nimport main from './containers/main/main';\nimport result from './containers/result/result';\n\nexport default (\n    <HashRouter>\n        <App>\n            <Switch>\n                <Route exact path=\"/\" component={welcome} />\n                <Route exact path=\"/main\" component={main} />\n                <Route exact path=\"/result\" component={result} />\n            </Switch>\n        </App>\n    </HashRouter>\n);","import React from 'react';\nimport { render } from 'react-dom';\n\nimport routes from './routes';\nimport { Provider } from 'react-redux';\nimport { store } from './store';\n\nrender(\n    <Provider store={store}>\n        {routes}\n    </Provider>,\n    document.getElementById('root')\n);"],"sourceRoot":""}